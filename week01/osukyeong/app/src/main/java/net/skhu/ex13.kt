package net.skhu

fun main() {
    // 스코프: 프로젝트 구조 내에서 변수나 함수, 클래스의 공용범위를 제어하는 단위
    // 범위: 클래스(변수, 함수), 패키지(변수, 함수, 클래스), 함수 (변수, 함수)
    // 규칙
    // 1. 외부에서 내부의 멤버를 참조연산자로만 참조 가능
    // 2. 동일 스코프 내에서 멤버들 공유 가능
    // 3. 하위 스코프에서 상위 스코프의 멤버를 재정의 가능
    val a = "함수 스코프"
    println(a)
    B().print()


    // 접근 제한자: 스코프 외부에서 내부로의 접근을 제한
    // 패키지
    // public: 어떤 패키지에서도 접근 가능
    // internal: 같은 모듈 내에서만 접근 가능
    // private: 같은 파일 내에서만 접근 가능

    // 클래스
    // public: 클래스 외부에서 접근 가능
    // private: 클래스 내부에서만 접근 가능
    // protected: 클래스 자신과 상속받은 클래스에서 접근 가능

}


val a = "패키지 스코프"
class B {
    val a = "클래스 스코프"
    fun print() {
        println(a)
    }
}